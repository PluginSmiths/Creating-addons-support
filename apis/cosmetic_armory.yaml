---
forge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5966/854/cosmeticarmorreworked-1.21.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5966854')
    }
neoforge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5961/480/cosmeticarmorreworked-1.21.4-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5961480')
    }
forge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5850/33/cosmeticarmorreworked-1.21.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5850033')
    }
neoforge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5840/786/cosmeticarmorreworked-1.21.3-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5840786')
    }
forge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/835/cosmeticarmorreworked-1.21.1-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610835')
    }
neoforge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/814/cosmeticarmorreworked-1.21.1-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610814')
    }
forge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/314/cosmeticarmorreworked-1.21-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427314')
    }
neoforge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/303/cosmeticarmorreworked-1.21-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427303')
    }
forge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5415/843/cosmeticarmorreworked-1.20.6-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5415843')
    }
neoforge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5303/368/cosmeticarmorreworked-1.20.6-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5303368')
    }
neoforge-1.20.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5302/314/cosmeticarmorreworked-1.20.5-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5302314')
    }
forge-1.16.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5131/968/CosmeticArmorReworked-1.16.5-v5a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5131968')
    }
neoforge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5082/294/cosmeticarmorreworked-1.20.4-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5082294')
    }
neoforge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4942/497/cosmeticarmorreworked-1.20.2-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4942497')
    }
forge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4938/380/cosmeticarmorreworked-1.20.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4938380')
    }
forge-1.20.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4934/468/cosmeticarmorreworked-1.20.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4934468')
    }
forge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4764/779/cosmeticarmorreworked-1.20.2-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4764779')
    }
forge-1.20.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  required_when_enabled: true
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4600/191/cosmeticarmorreworked-1.20.1-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4600191')
    }
name: "Cosmetic Armor Reworked"
forge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5966/854/cosmeticarmorreworked-1.21.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5966854')
    }
neoforge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5961/480/cosmeticarmorreworked-1.21.4-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5961480')
    }
forge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5850/33/cosmeticarmorreworked-1.21.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5850033')
    }
neoforge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5840/786/cosmeticarmorreworked-1.21.3-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5840786')
    }
forge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/835/cosmeticarmorreworked-1.21.1-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610835')
    }
neoforge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/814/cosmeticarmorreworked-1.21.1-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610814')
    }
forge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/314/cosmeticarmorreworked-1.21-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427314')
    }
neoforge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/303/cosmeticarmorreworked-1.21-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427303')
    }
forge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5415/843/cosmeticarmorreworked-1.20.6-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5415843')
    }
neoforge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5303/368/cosmeticarmorreworked-1.20.6-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5303368')
    }
neoforge-1.20.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5302/314/cosmeticarmorreworked-1.20.5-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5302314')
    }
forge-1.16.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5131/968/CosmeticArmorReworked-1.16.5-v5a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5131968')
    }
neoforge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5082/294/cosmeticarmorreworked-1.20.4-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5082294')
    }
neoforge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4942/497/cosmeticarmorreworked-1.20.2-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4942497')
    }
forge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4938/380/cosmeticarmorreworked-1.20.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4938380')
    }
forge-1.20.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4934/468/cosmeticarmorreworked-1.20.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4934468')
    }
forge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4764/779/cosmeticarmorreworked-1.20.2-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4764779')
    }
forge-1.20.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4600/191/cosmeticarmorreworked-1.20.1-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4600191')
    }
name: "Cosmetic Armor Reworked"
forge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5966/854/cosmeticarmorreworked-1.21.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5966854')
    }
neoforge-1.21.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5961/480/cosmeticarmorreworked-1.21.4-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5961480')
    }
forge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5850/33/cosmeticarmorreworked-1.21.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5850033')
    }
neoforge-1.21.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5840/786/cosmeticarmorreworked-1.21.3-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5840786')
    }
forge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/835/cosmeticarmorreworked-1.21.1-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610835')
    }
neoforge-1.21.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5610/814/cosmeticarmorreworked-1.21.1-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5610814')
    }
forge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/314/cosmeticarmorreworked-1.21-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427314')
    }
neoforge-1.21:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5427/303/cosmeticarmorreworked-1.21-v1-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5427303')
    }
forge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5415/843/cosmeticarmorreworked-1.20.6-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5415843')
    }
neoforge-1.20.6:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5303/368/cosmeticarmorreworked-1.20.6-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5303368')
    }
neoforge-1.20.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5302/314/cosmeticarmorreworked-1.20.5-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5302314')
    }
forge-1.16.5:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5131/968/CosmeticArmorReworked-1.16.5-v5a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5131968')
    }
neoforge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/5082/294/cosmeticarmorreworked-1.20.4-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:5082294')
    }
neoforge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4942/497/cosmeticarmorreworked-1.20.2-v1a-neoforge.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4942497')
    }
forge-1.20.4:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4938/380/cosmeticarmorreworked-1.20.4-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4938380')
    }
forge-1.20.3:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4934/468/cosmeticarmorreworked-1.20.3-v1.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4934468')
    }
forge-1.20.2:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4764/779/cosmeticarmorreworked-1.20.2-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4764779')
    }
forge-1.20.1:
  required_when_enabled: true
  update_files:
    - lib/cosmetic_armory.jar
  resource_paths:
    block_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/block'
    item_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/item'
    effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/effect'
    environment_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/environment'
    gui_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/gui'
    font_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/font'
    map_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/map'
    misc_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/misc'
    mob_effect_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/mob_effect'
    models_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/models'
    painting_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/painting'
    particle_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/particle'
    trims_textures_dir: 'lib/cosmetic_armory.jar!/assets/cosmetic_armory/textures/trims'
  gradle: |
    repositories {
      maven {
        url = 'https://cursemaven.com/'
      }
    }

    tasks.register('cosmetic_armory') {
      ant.mkdir(dir: 'lib/');
      ant.get(src: 'https://edge.forgecdn.net/files/4600/191/cosmeticarmorreworked-1.20.1-v1a.jar', dest: 'lib/cosmetic_armory.jar', skipexisting: 'true');
    }

    compileJava.dependsOn cosmetic_armory
    minecraft {
        runs {
            client {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            server {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
            data {
                property 'mixin.env.remapRefMap', 'true'
                property 'mixin.env.refMapRemappingFile', '${projectDir}/build/createSrgToMcp/output.srg'
            }
        }
    }
    
    dependencies {
      implementation fg.deobf('curse.maven:cosmetic-armor-reworked-237307:4600191')
    }
name: "Cosmetic Armor Reworked"
